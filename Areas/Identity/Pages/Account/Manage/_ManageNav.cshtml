@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
    <div class=" row justify-content-center">
        <ul class="nav nav-pills nav-stacked">
            <li class="@ManageNavPages.IndexNavClass(ViewContext) button btn btn-block"><a asp-page="./Index">Profile</a></li>
            <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)  button btn btn-block"><a id="change-password" asp-page="./ChangePassword">Change Password</a></li>
           

            @if (hasExternalLogins)
            {
                <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)  button btn btn-block"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
            }
            <!--<li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)  button btn btn-block"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>-->
            <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)  button btn btn-block"><a asp-page="./PersonalData">Personal data</a></li>
        </ul>
    </div>
